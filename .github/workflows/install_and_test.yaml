name: Install and Test
on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 8 * * *'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  install_and_test:
    strategy:
      fail-fast: false
      matrix:
        python_version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
        os:
          - 'ubuntu-latest'
          - 'macos-latest'
    runs-on: ${{ matrix.os }}
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python_version }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Show OS and Python version
        run: |
          python3 -c 'import platform; print("OS: ", platform.platform()); print("Python: ", platform.python_version())'

      - name: Install 'revefi-dbt-client' using setup.py
        run: |
          pip3 install .

      - name: Run (legacy) 'revefi-dbt-client'
        run: |
          # Test if the module is installed and is available in the path
          # This is the legacy way of running the module
          python3 -m revefi-dbt-client.upload --help

      - name: Run 'revefi-dbt-client'
        run: |
          # Test if the module is installed and is available in the path
          revefi-dbt-client --help

      - name: Test setting '--ignore-error' results in exit code 0
        run: |
          # This shall fail, however, --ignore-error is set and the command shall exit with 0 
          revefi-dbt-client \
            --token definitely-a-real-token \
            --project_folder /path/to/project/dir \
            --target_folder custom_target_dir \
            --logs_folder /path/to/logs/dir \
            --ignore-error

      - name: Uninstall 'revefi-dbt-client'
        run: |
          pip3 uninstall -y revefi-dbt-client

      - name: Run unit tests with coverage
        run: |
          pip3 install -r requirements-dev.txt
          coverage run -m pytest --verbose

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          name: RevefiDbtClient
          env_vars: OS,PYTHON_VERSION
          flags: unittests
